pander(round(summary(model8_assess)$s.table,2), caption = "(\\#tab:model8-smooth) Statistical overview of the smooth components of the model removing studies with limited observations in the assessment techniques")
summary(model5_all)$s.table
summary(model5_all)$s.table[3,1]
summary(model5_all)$s.table[3,4]
summary(model6_all)$s.table[1,4]
summary(model6_all)$s.table
summary(model7)$s.table[3,4]
summary(model7)$s.table
require(tidyverse)
Data <- tibble(`Observed Water Level` = seq(0,8,length=20) + rnorm(0.5,2),
`Satellite Water Level` = seq(0,8,length=20) + rnorm(0.5,3),
Reservoir = c(rep("One",5),rep("Two",5),rep("One",5),rep("Two",5)))
Data %>%
ggplot(aes(`Observed Water Level`, `Satellite Water Level`,
colour = Reservoir)) + geom_point(size=1.5) +
theme_bw()
seq(0,8,length=20) + rnorm(0.5,2)
seq(0,8,length=20)
seq(0,8,length=20) + rnorm(20,0.5,2)
Data <- tibble(`Observed Water Level` = seq(0,8,length=20) + rnorm(20,0.5,2),
`Satellite Water Level` = seq(0,8,length=20) + rnorm(20,0.5,3),
Reservoir = c(rep("One",5),rep("Two",5),rep("One",5),rep("Two",5)))
Data %>%
ggplot(aes(`Observed Water Level`, `Satellite Water Level`,
colour = Reservoir)) + geom_point(size=1.5) +
theme_bw()
Data <- tibble(`Observed Water Level` = seq(2,8,length=20) + rnorm(20,0.5,2),
`Satellite Water Level` = seq(0,8,length=20) + rnorm(20,0.5,3),
Reservoir = c(rep("One",5),rep("Two",5),rep("One",5),rep("Two",5)))
Data %>%
ggplot(aes(`Observed Water Level`, `Satellite Water Level`,
colour = Reservoir)) + geom_point(size=2) +
theme_bw()
Data <- tibble(`Observed Water Level` = seq(2,8,length=20) + rnorm(20,0.5,1.5),
`Satellite Water Level` = seq(0,8,length=20) + rnorm(20,0.5,2),
Reservoir = c(rep("One",5),rep("Two",5),rep("One",5),rep("Two",5)))
Data %>%
ggplot(aes(`Observed Water Level`, `Satellite Water Level`,
colour = Reservoir)) + geom_point(size=2) +
theme_bw()
Data <- tibble(`Observed Water Level` = seq(2,8,length=20) + rnorm(20,0.5,1),
`Satellite Water Level` = seq(0,8,length=20) + rnorm(20,0.5,1.5),
Reservoir = c(rep("One",5),rep("Two",5),rep("One",5),rep("Two",5)))
Data %>%
ggplot(aes(`Observed Water Level`, `Satellite Water Level`,
colour = Reservoir)) + geom_point(size=2) +
theme_bw()
Data %>%
ggplot(aes(`Observed Water Level`, `Satellite Water Level`,
colour = Reservoir)) + geom_point(size=3) +
theme_bw()
?colSums
by_species <- iris %>% group_by(Species)
require(tidyverse)
by_species <- iris %>% group_by(Species)
by_species %>% summarise_all(mean)
View(by_species)
libs <- c("ncmeta", "tidync", "maps", "ggplot2", "devtools", "fields", "RNetCDF", "raster", "dplyr", "tidyr", "maptools", "geosphere","tmap")
sapply(libs, library, character.only = TRUE)
install.packages("ncmeta")
libs <- c("ncmeta", "tidync", "maps", "ggplot2", "devtools", "fields", "RNetCDF", "raster", "dplyr", "tidyr", "maptools", "geosphere","tmap")
sapply(libs, library, character.only = TRUE)
install.packages("tidync")
sapply(libs, library, character.only = TRUE)
install.packages("maps")
sapply(libs, library, character.only = TRUE)
install.packages("fields")
sapply(libs, library, character.only = TRUE)
filename <- "D:/Desktop/PhD/DATA6811 - Computational Inference for Machine Learning/Assignments/Assignment 3/CentralAmericaPrecAnomalyGHCN.nc"
prec <- tidync(filename)
filename <- "CentralAmericaPrecAnomalyGHCN.nc"
prec <- tidync(filename)
print(prec)
prec_data <- prec %>% hyper_array()
prec_anom <- prec_data[[1]]
tf <- attr(prec_data,"transforms")
tf
plot(prec_anom[10,40,], type="l", ylab = "Degrees C", xlab = "Time")
latrad = tf$LAT$LAT*pi/180
weightvec = cos(latrad)
EOF = sweep(x = prec_anom, MARGIN = 2,
STATS = weightvec, FUN = '*')
X = matrix(EOF, 3040, 300)
#First, set all bad values in X to zero (it's ok to do this here because the data has had the mean subtracted, but it's not always ok!)
X[is.na(X)] <- 0
#We need to transpose the data matrix before feeding it into the SVD function
E <- svd(t(X))
#We need to re-organize our matrix onto lon-lat co-ordinates.
v_w <- matrix(E$v, ncol = dim(tf$LAT)[1], nrow  = dim(tf$LON)[1])
v <- sweep(v_w, MARGIN = 2, STATS = weightvec, FUN = '/') #Divide by the cosine to remove the area-weighting before plotting.
image.plot(tf$LON$LON, tf$LAT$LAT, v, xlab = 'Longitude', ylab = 'Latitude')
plot(E$u[,1], type="l", ylab= "PC 1", xlab = "Time (months since Dec 1995)")
plot(E$d/sum(E$d), ylab= "Relative Variance", xlab = "EOF")
print("5% of the variance is explained by the first EOF, as seen in the plot")
install.packages(c("ncmeta", "tidync", "maps", "ggplot2", "devtools", "fields", "RNetCDF", "raster", "dplyr", "tidyr", "maptools", "geosphere","tmap"))
install.packages(c("ncmeta", "tidync", "maps", "ggplot2", "devtools", "fields", "RNetCDF", "raster", "dplyr", "tidyr", "maptools", "geosphere", "tmap"))
update.packages("rlang")
require(rlang)
knitr::opts_chunk$set(echo = TRUE)
libs <- c("ncmeta", "tidync", "maps", "ggplot2", "devtools", "fields", "RNetCDF", "raster", "dplyr", "tidyr", "maptools", "geosphere","tmap")
sapply(libs, library, character.only = TRUE)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
libs <- c("ncmeta", "tidync", "maps", "ggplot2", "devtools", "fields", "RNetCDF", "raster", "dplyr", "tidyr", "maptools", "geosphere","tmap")
sapply(libs, library, character.only = TRUE)
libs <- c("ncmeta", "tidync", "maps", "ggplot2", "devtools", "fields", "RNetCDF", "raster", "tidyverse", "maptools", "geosphere","tmap")
sapply(libs, library, character.only = TRUE)
libs <- c("tidyverse", "ncmeta", "tidync", "maps", "ggplot2", "devtools", "fields", "RNetCDF", "raster", "maptools", "geosphere","tmap")
sapply(libs, library, character.only = TRUE)
ls()
rm(list=ls())
require(rlang)
?rlang
??rlang
rm(list = ls())
install.packages("rlang")
?png
?image.plot
??image.plot
require(tidyverse)
require(lubridate)
require(mgcv)
require(visreg)
require(patchwork)
suppressWarnings(require(knitr))
suppressWarnings(require(bookdown))
suppressWarnings(require(pander))
Zhang_small <- read_csv("../../data/SmallCatchments_T2.csv")
Zhang_large <- read_csv("../../data/LargeCatchments_T1.csv")
new_data <- read_csv("../../data/NewCatchments_T3.csv")
names(Zhang_small)[3:4] <- c("Area_km2", "Pa_mm")
names(Zhang_large)[3:4] <- c("Area_km2", "Pa_mm")
names(new_data)[3:4] <- c("Area_km2", "Pa_mm")
names(Zhang_small)[5:6] <- c("Forest_type", "Hydrological_regime")
names(Zhang_large)[5:6] <- c("Forest_type", "Hydrological_regime")
names(new_data)[5:6] <- c("Forest_type", "Hydrological_regime")
names(Zhang_small)[9:10] <- c("Precip_data_type", "Assessment_technique")
names(Zhang_large)[9:10] <- c("Precip_data_type", "Assessment_technique")
names(new_data)[9:10] <- c("Precip_data_type", "Assessment_technique")
Zhang_small$From <- as.numeric(Zhang_small$From)
Zhang_small$To <- as.numeric(Zhang_small$To)
Zhang_all <- bind_rows(Zhang_large,Zhang_small) %>%
mutate(dataset = "original Zhang et al data")
new_data <- new_data %>%
mutate(dataset = "new data")
All_data <- bind_rows(Zhang_all, new_data)
All_data <- All_data %>%
mutate(`Possible duplicate` =
ifelse(is.na(`Possible duplicate`)==T,0,`Possible duplicate`),
`Possible duplicate` = as.numeric(`Possible duplicate`)) %>%
filter(`Possible duplicate` != 1)
# calculate dryness index
All_data <- All_data %>%
mutate(Dryness = E0/Pa_mm)
All_data <- All_data %>%
filter(`Watershed #` != 1)
All_data <- All_data %>%
mutate(DeltaQf_perc = ifelse(`Watershed #` == 76,157,DeltaQf_perc))
require(latex2exp)
png("DataExploration.png", width = 2500, height = 1800, res = 300)
All_data %>%
mutate(log10Area = log10(Area_km2)) %>%
pivot_longer(c(DeltaF_perc, DeltaQf_perc, log10Area, Pa_mm, E0),
names_to = "variable", values_to = "value") %>%
ggplot(aes(value)) + geom_histogram(fill = "steelblue", bins=50) + theme_bw() +
facet_wrap(~variable, scales = "free", labeller = labeller(variable =
c("log10Area" =  "log10(Area km2)", #latex2exp::TeX("$\\log_{10}({Area~km^2})$"),
"DeltaF_perc" = "Delta Forest (%)",
"DeltaQf_perc" = "Delta Qf (%)",
"E0" = "Annual Potential E (mm)",
"Pa_mm" = "Annual Rainfall (mm)"),default = label_parsed)) +
theme(axis.title = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1.2)),
strip.text = element_text(size = rel(1.5)),
axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
All_data2 <- All_data %>%
mutate(Forest_Sign = ifelse(DeltaF_perc < 0,
"Decrease", "Increase"),
DeltaF_perc_pos = ifelse(DeltaF_perc < 0,
-1*DeltaF_perc,
DeltaF_perc))
All_data2 %>%
filter(is.na(Forest_Sign)==T)
# temporary write out of data files for review reply
write_csv(All_data, "All_data.csv")
write_csv(All_data2, "All_data2.csv")
# plot to show the difference
png("Increase_decrease.png", width = 2500, height = 1800, res = 300)
All_data2 %>%
filter(is.na(Forest_Sign)==F) %>%
ggplot(aes(DeltaF_perc_pos,DeltaQf_perc, colour = Forest_Sign)) +
geom_point() +
facet_wrap(~Forest_Sign, ncol=1, scales = "free") +
theme_bw() +
theme(axis.title = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1.2)),
legend.text = element_text(size = rel(1.2)),
legend.title = element_text(size = rel(1.2)),
strip.text = element_text(size = rel(1.5))) +
scale_colour_manual(name = "Forest cover direction",
values = c("Decrease" = "red","Increase" = "blue")) +
xlab("Change in forest cover %") + ylab("Change in flow (Qf) %")
dev.off()
include_graphics("Increase_decrease.png")
# plot to show the difference
png("Increase_decrease.png", width = 2500, height = 1800, res = 300)
All_data2 %>%
filter(is.na(Forest_Sign)==F) %>%
ggplot(aes(DeltaF_perc_pos,DeltaQf_perc, colour = Forest_Sign)) +
geom_point() +
facet_wrap(~Forest_Sign, ncol=1, scales = "free") +
theme_bw() +
theme(axis.title = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1.2)),
legend.text = element_text(size = rel(1.2)),
legend.title = element_text(size = rel(1.2)),
strip.text = element_text(size = rel(1.5))) +
scale_colour_manual(name = "Forest cover direction",
values = c("Decrease" = "red","Increase" = "blue")) +
xlab("Change in forest cover %") + ylab("Change in flow (Qf) %")
dev.off()
include_graphics("Increase_decrease.png")
require(tidyverse)
require(lubridate)
require(mgcv)
require(visreg)
require(patchwork)
suppressWarnings(require(knitr))
suppressWarnings(require(bookdown))
suppressWarnings(require(pander))
Zhang_small <- read_csv("../../data/SmallCatchments_T2.csv")
Zhang_large <- read_csv("../../data/LargeCatchments_T1.csv")
new_data <- read_csv("../../data/NewCatchments_T3.csv")
names(Zhang_small)[3:4] <- c("Area_km2", "Pa_mm")
names(Zhang_large)[3:4] <- c("Area_km2", "Pa_mm")
names(new_data)[3:4] <- c("Area_km2", "Pa_mm")
names(Zhang_small)[5:6] <- c("Forest_type", "Hydrological_regime")
names(Zhang_large)[5:6] <- c("Forest_type", "Hydrological_regime")
names(new_data)[5:6] <- c("Forest_type", "Hydrological_regime")
names(Zhang_small)[9:10] <- c("Precip_data_type", "Assessment_technique")
names(Zhang_large)[9:10] <- c("Precip_data_type", "Assessment_technique")
names(new_data)[9:10] <- c("Precip_data_type", "Assessment_technique")
Zhang_small$From <- as.numeric(Zhang_small$From)
Zhang_small$To <- as.numeric(Zhang_small$To)
Zhang_all <- bind_rows(Zhang_large,Zhang_small) %>%
mutate(dataset = "original Zhang et al data")
new_data <- new_data %>%
mutate(dataset = "new data")
All_data <- bind_rows(Zhang_all, new_data)
All_data <- All_data %>%
mutate(`Possible duplicate` =
ifelse(is.na(`Possible duplicate`)==T,0,`Possible duplicate`),
`Possible duplicate` = as.numeric(`Possible duplicate`)) %>%
filter(`Possible duplicate` != 1)
# calculate dryness index
All_data <- All_data %>%
mutate(Dryness = E0/Pa_mm)
All_data <- All_data %>%
filter(`Watershed #` != 1)
All_data <- All_data %>%
mutate(DeltaQf_perc = ifelse(`Watershed #` == 76,157,DeltaQf_perc))
require(latex2exp)
png("DataExploration.png", width = 2500, height = 1800, res = 300)
All_data %>%
mutate(log10Area = log10(Area_km2)) %>%
pivot_longer(c(DeltaF_perc, DeltaQf_perc, log10Area, Pa_mm, E0),
names_to = "variable", values_to = "value") %>%
ggplot(aes(value)) + geom_histogram(fill = "steelblue", bins=50) + theme_bw() +
facet_wrap(~variable, scales = "free", labeller = labeller(variable =
c("log10Area" =  "log10(Area km2)", #latex2exp::TeX("$\\log_{10}({Area~km^2})$"),
"DeltaF_perc" = "Delta Forest (%)",
"DeltaQf_perc" = "Delta Qf (%)",
"E0" = "Annual Potential E (mm)",
"Pa_mm" = "Annual Rainfall (mm)"),default = label_parsed)) +
theme(axis.title = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1.2)),
strip.text = element_text(size = rel(1.5)),
axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
include_graphics("./DataExploration.png")
All_data2 <- All_data %>%
mutate(Forest_Sign = ifelse(DeltaF_perc < 0,
"Decrease", "Increase"),
DeltaF_perc_pos = ifelse(DeltaF_perc < 0,
-1*DeltaF_perc,
DeltaF_perc))
# temporary write out of data files for review reply
write_csv(All_data, "All_data.csv")
write_csv(All_data2, "All_data2.csv")
# plot to show the difference
png("Increase_decrease.png", width = 2500, height = 1800, res = 300)
All_data2 %>%
filter(is.na(Forest_Sign)==F) %>%
ggplot(aes(DeltaF_perc_pos,DeltaQf_perc, colour = Forest_Sign)) +
geom_point() +
facet_wrap(~Forest_Sign, ncol=1, scales = "free") +
theme_bw() +
theme(axis.title = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1.2)),
legend.text = element_text(size = rel(1.2)),
legend.title = element_text(size = rel(1.2)),
strip.text = element_text(size = rel(1.5))) +
scale_colour_manual(name = "Forest cover direction",
values = c("Decrease" = "red","Increase" = "blue")) +
xlab("Change in forest cover %") + ylab("Change in flow (Qf) %")
dev.off()
include_graphics("Increase_decrease.png")
All_data <- All_data %>%
filter(`Watershed #` != 1)
All_data2 <- All_data %>%
mutate(Forest_Sign = ifelse(DeltaF_perc < 0,
"Decrease", "Increase"),
DeltaF_perc_pos = ifelse(DeltaF_perc < 0,
-1*DeltaF_perc,
DeltaF_perc))
All_data2 %>%
filter(is.na(Forest_Sign)==T)
# temporary write out of data files for review reply
write_csv(All_data, "All_data.csv")
write_csv(All_data2, "All_data2.csv")
# plot to show the difference
png("Increase_decrease.png", width = 2500, height = 1800, res = 300)
All_data2 %>%
filter(is.na(Forest_Sign)==F) %>%
ggplot(aes(DeltaF_perc_pos,DeltaQf_perc, colour = Forest_Sign)) +
geom_point() +
facet_wrap(~Forest_Sign, ncol=1, scales = "free") +
theme_bw() +
theme(axis.title = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1.2)),
legend.text = element_text(size = rel(1.2)),
legend.title = element_text(size = rel(1.2)),
strip.text = element_text(size = rel(1.5))) +
scale_colour_manual(name = "Forest cover direction",
values = c("Decrease" = "red","Increase" = "blue")) +
xlab("Change in forest cover %") + ylab("Change in flow (Qf) %")
dev.off()
getd()
getwd()
setwd("C:/Users/rver4657/Dropbox (Sydney Uni)/Research/Forest_and_water/paper/Forest_and_Water")
options(tinytex.verbose = FALSE)
require(tidyverse)
require(lubridate)
require(mgcv)
require(visreg)
require(patchwork)
suppressWarnings(require(knitr))
suppressWarnings(require(bookdown))
suppressWarnings(require(pander))
Zhang_small <- read_csv("../../data/SmallCatchments_T2.csv")
Zhang_large <- read_csv("../../data/LargeCatchments_T1.csv")
new_data <- read_csv("../../data/NewCatchments_T3.csv")
names(Zhang_small)[3:4] <- c("Area_km2", "Pa_mm")
names(Zhang_large)[3:4] <- c("Area_km2", "Pa_mm")
names(new_data)[3:4] <- c("Area_km2", "Pa_mm")
names(Zhang_small)[5:6] <- c("Forest_type", "Hydrological_regime")
names(Zhang_large)[5:6] <- c("Forest_type", "Hydrological_regime")
names(new_data)[5:6] <- c("Forest_type", "Hydrological_regime")
names(Zhang_small)[9:10] <- c("Precip_data_type", "Assessment_technique")
names(Zhang_large)[9:10] <- c("Precip_data_type", "Assessment_technique")
names(new_data)[9:10] <- c("Precip_data_type", "Assessment_technique")
Zhang_small$From <- as.numeric(Zhang_small$From)
Zhang_small$To <- as.numeric(Zhang_small$To)
Zhang_all <- bind_rows(Zhang_large,Zhang_small) %>%
mutate(dataset = "original Zhang et al data")
new_data <- new_data %>%
mutate(dataset = "new data")
All_data <- bind_rows(Zhang_all, new_data)
All_data <- All_data %>%
mutate(`Possible duplicate` =
ifelse(is.na(`Possible duplicate`)==T,0,`Possible duplicate`),
`Possible duplicate` = as.numeric(`Possible duplicate`)) %>%
filter(`Possible duplicate` != 1)
# calculate dryness index
All_data <- All_data %>%
mutate(Dryness = E0/Pa_mm)
All_data <- All_data %>%
filter(`Watershed #` != 1)
All_data <- All_data %>%
mutate(DeltaQf_perc = ifelse(`Watershed #` == 76,157,DeltaQf_perc))
require(latex2exp)
png("DataExploration.png", width = 2500, height = 1800, res = 300)
All_data %>%
mutate(log10Area = log10(Area_km2)) %>%
pivot_longer(c(DeltaF_perc, DeltaQf_perc, log10Area, Pa_mm, E0),
names_to = "variable", values_to = "value") %>%
ggplot(aes(value)) + geom_histogram(fill = "steelblue", bins=50) + theme_bw() +
facet_wrap(~variable, scales = "free", labeller = labeller(variable =
c("log10Area" =  "log10(Area km2)", #latex2exp::TeX("$\\log_{10}({Area~km^2})$"),
"DeltaF_perc" = "Delta Forest (%)",
"DeltaQf_perc" = "Delta Qf (%)",
"E0" = "Annual Potential E (mm)",
"Pa_mm" = "Annual Rainfall (mm)"),default = label_parsed)) +
theme(axis.title = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1.2)),
strip.text = element_text(size = rel(1.5)),
axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
include_graphics("./DataExploration.png")
All_data2 <- All_data %>%
mutate(Forest_Sign = ifelse(DeltaF_perc < 0,
"Decrease", "Increase"),
DeltaF_perc_pos = ifelse(DeltaF_perc < 0,
-1*DeltaF_perc,
DeltaF_perc))
All_data2 %>%
filter(is.na(Forest_Sign)==T)
# temporary write out of data files for review reply
write_csv(All_data, "All_data.csv")
write_csv(All_data2, "All_data2.csv")
# plot to show the difference
png("Increase_decrease.png", width = 2500, height = 1800, res = 300)
All_data2 %>%
filter(is.na(Forest_Sign)==F) %>%
ggplot(aes(DeltaF_perc_pos,DeltaQf_perc, colour = Forest_Sign)) +
geom_point() +
facet_wrap(~Forest_Sign, ncol=1, scales = "free") +
theme_bw() +
theme(axis.title = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1.2)),
legend.text = element_text(size = rel(1.2)),
legend.title = element_text(size = rel(1.2)),
strip.text = element_text(size = rel(1.5))) +
scale_colour_manual(name = "Forest cover direction",
values = c("Decrease" = "red","Increase" = "blue")) +
xlab("Change in forest cover %") + ylab("Change in flow (Qf) %")
dev.off()
include_graphics("Increase_decrease.png")
getwd()
linear_model_E0 <- gam(DeltaQf_perc ~ DeltaF_perc_pos +
Forest_Sign + E0,
data = All_data2)
#summary(linear_model_E0)
#gam.check(linear_model_simple)
linear_model_simple <- gam(DeltaQf_perc ~ DeltaF_perc_pos +
Forest_Sign,
data = All_data2 %>% filter(dataset == "original Zhang et al data"))
#summary(linear_model_simple)
#gam.check(linear_model_simple)
linear_model_simple_b <- gam(DeltaQf_perc ~ DeltaF_perc_pos +
Forest_Sign,
data = All_data2)
#summary(linear_model_simple)
r_sq <- round(summary(linear_model_simple_b)$r.sq,2)
png("residual_plot_model1.png", width = 2500, height = 1800, res = 300)
par(mfrow=c(2,2))
gam.check(linear_model_simple)
par(mfrow=c(1,1))
dev.off()
png("flow_forest_byArea.png", width = 2500, height = 1800, res = 300)
All_data2 %>%
ggplot(aes(DeltaF_perc_pos, DeltaQf_perc, colour = Assessment_technique,size = log10(Area_km2),
shape = Forest_Sign)) + geom_point(alpha = 0.5) +
theme_bw() + ylab("% change in flow") +
theme(axis.title = element_text(size = rel(2)),
axis.text = element_text(size = rel(1.5))) +
xlab("% change in forest cover") + #scale_y_log10() +
scale_size_continuous(name = "log10(Area in km2)") +
scale_colour_discrete(name = "Assessment Technique") +
scale_shape_discrete(name = "Forest cover direction")
dev.off()
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(lubridate)
require(mgcv)
require(car)
All_data <- read_csv("All_data.csv")
All_data2 <- read_csv("All_data2.csv")
All_data2 <- All_data2 %>%
mutate(length = To - From,
mid_year = From + (To - From)/2)
#Maybe first simply
# https://stackoverflow.com/questions/52554336/plot-the-equivalent-of-correlation-matrix-for-factors-categorical-data-and-mi
library(ggcorrplot)
png("testcorr_plot.png", width = 960, height = 960)
model.matrix(~0+DeltaF_perc_pos +
Forest_Sign +
log10(Area_km2) +
Dryness +
length +
Precip_data_type +  Assessment_technique +
Forest_type +
Hydrological_regime, data=All_data2) %>%
cor(use="pairwise.complete.obs") %>%
ggcorrplot(show.diag = F, type="lower", lab=TRUE, lab_size=4)
dev.off()
model6_all <- gam(DeltaQf_perc ~ DeltaF_perc_pos +
Forest_Sign +
log10(Area_km2) +
Dryness +
length +# s(From, k = 40, bs = "ts") +
Precip_data_type +  Assessment_technique +
Forest_type +
Hydrological_regime
, data = All_data2)
summary(model6_all)
gam.check(model6_all)
#plot(model6_all)
inf1 = influence.gam(model6_all)
hist(inf1)
hist(cooks.distance(model6_all))
which.max(cooks.distance(model6_all))
regclass::VIF(model6_all)
# Can only do car::vif on linear model and only on numerical values
car::vif(gam(DeltaQf_perc ~ DeltaF_perc_pos + Forest_Sign +
log10(Area_km2) +
Dryness +
length, data = All_data2))
