require(lubridate)
y_sp<- read_csv("../local_model/sapflow_data/Yanga.csv", skip = 4) %>%
mutate(date = dmy(date))
m_sp<- read_csv("../local_model/sapflow_data/Markaranka.csv", skip = 6, na =c("","#REF!")) %>%
mutate(date = dmy(Date)) %>%
select(-Date)
c_sp<- read_csv("../local_model/sapflow_data/Calperum_Station_new.csv",
skip = 3)%>%
mutate(date = dmy(date))
b_sp<- read_csv("../local_model/sapflow_data/Bookpurnong.csv", skip = 4) %>%
mutate(date = dmy(date))
y_sp_long <- y_sp %>%
pivot_longer(Y1:Y10, names_to = "name", values_to = "sapflow")
b_sp_long <- b_sp %>%
pivot_longer(B1:B3, names_to = "name", values_to = "sapflow")
c_sp_long <- c_sp %>%
pivot_longer(C1:C4, names_to = "name", values_to = "sapflow")
m_sp_long <- m_sp %>%
pivot_longer(M1:M5, names_to = "name", values_to = "sapflow")
all_sp <- bind_rows(y_sp_long, b_sp_long, c_sp_long,
m_sp_long)
N <- read_csv("../local_model/SAT_data/local-model-NDVI-EVI-MOD13A1-006-results.csv")
N <- N %>%
select( Date, ID, MOD13A1_006__500m_16_days_EVI,  MOD13A1_006__500m_16_days_NDVI) %>%
rename(ndvi = MOD13A1_006__500m_16_days_NDVI, evi = MOD13A1_006__500m_16_days_EVI,
site = ID)
N <- N %>%
mutate(date = dmy(Date)) %>%
select(-Date)
# split EVI and NDVI data
EVI <- N %>%
select(site,date,evi) %>%
rename(name = site)
NDVI <- N %>%
select(site,date,ndvi) %>%
rename(name = site)
fc_data <- read_csv("FC_dataset_20200614.csv")
fc_data <- fc_data %>%
mutate(date = ymd(date)) %>%
select(c(name,date,rasValue)) %>%
rename(FC = rasValue)
N <- read_csv("S2.EVI.NDVI/S2_EVI_NDVI_summary.csv")
N <- N %>%
pivot_longer(`2017-01-17`:`2020-07-12`, names_to = "Date",
values_to = "index") %>%
mutate(date = ymd(Date)) %>%
dplyr::select(-Date)
# split EVI and NDVI data
EVI_S <- N %>%
filter(type == "EVI") %>%
dplyr::select(site,date,pixel,index) %>%
filter(index > 0) %>%
rename(evi = index,
name = site)
NDVI_S <- N %>%
filter(type == "NDVI") %>%
dplyr::select(site,date,pixel,index) %>%
filter(index > 0) %>%
rename(ndvi = index,
name = site)
repeat_dates <- function(sap_data, sat_data) {
# sap_data is sapflow data for a site
# sat_data is satellite data for a site
# find the adjustment in days at the front of the series
#browser()
adjustment_start <- sap_data$date[which.min(sap_data$date)] -
sat_data$date[which.min(sat_data$date)]
# Create a sequence of dates for the satellite data observations
sat_dates <- tibble(date =
seq(ymd(sat_data$date[which.min(sat_data$date)]
+ adjustment_start),
ymd(sap_data$date[which.max(sap_data$date)]),
by=1))
# figure out how many times to replicate the dates
rep_times <-
as.numeric(c((-adjustment_start+1),
diff(sat_data$date)))
# replicate dates
new_dates_out <- sat_data %>%
dplyr::select(date) %>%
slice(rep(1:n(),times = rep_times))
# need to add NA as last observation might not be 16 days from the end
adjustment_end <- sap_data$date[which.max(sap_data$date)] -
new_dates_out$date[nrow(new_dates_out)]
new_dates_out <- new_dates_out %>%
add_row(date = rep(NA, as.numeric(adjustment_end)))
# add new_dates to sat_dates in a tibble
sat_dates <- sat_dates %>%
mutate(rep_dates = new_dates_out$date)
return(sat_dates)
}
sat_sum_fun <- function(site, sapflow_data, RS_data, pixel= NULL) {
# browser()
site_data <- sapflow_data %>% filter(name == site)
# filter remote sensing data to site and time period
min_RS_date <- RS_data$date[1]
max_sf_date <- site_data$date[which.max(site_data$date)]
if (max_sf_date > min_RS_date) {
site_RS <- RS_data %>% filter(name == site) %>%
filter(date >=
site_data$date[which.min(site_data$date)] &
date <= site_data$date[which.max(site_data$date)])
new_dates <- repeat_dates(site_data,site_RS)
# now join site_data, site_RS and new_dates
sat_temp <- left_join(site_data, site_RS)
site_all <- left_join(sat_temp, new_dates,
by=c("date" = "date"))
# finally calculate the average by rep_dates
if (any(grepl("evi",names(site_all)))==T) {
site_sum <- site_all %>%
group_by(rep_dates) %>%
summarise(name = unique(name),
sapflow = sum(sapflow),
evi = sum(evi, na.rm =T))
} else {
site_sum <- site_all %>%
group_by(rep_dates) %>%
summarise(name = unique(name),
sapflow = sum(sapflow),
ndvi = sum(ndvi, na.rm =T))
}
return(site_sum)
} else return(NA)
}
# 1. split by site
sites <- unique(all_sp$name)
site_summary_EVI<- map(sites, sat_sum_fun, all_sp, EVI)
site_summary_NDVI<- map(sites, sat_sum_fun, all_sp, NDVI)
# 1. split by site
sites <- unique(all_sp$name)
EVI_S_mean <- EVI_S %>%
group_by(name, date) %>%
summarise(evi = mean(evi,na.rm =T))
NDVI_S_mean <- NDVI_S %>%
group_by(name, date) %>%
summarise(ndvi = mean(ndvi))
site_summary_EVI_S<- map(sites, sat_sum_fun, all_sp, ungroup(EVI_S_mean))
site_summary_NDVI_S<- map(sites, sat_sum_fun, all_sp, ungroup(NDVI_S_mean))
# 1. split by site
sites <- unique(all_sp$name)
EVI_s1 <- EVI_S %>%
filter(pixel == 1)
EVI_s2 <- EVI_S %>%
filter(pixel == 2)
EVI_s3 <- EVI_S %>%
filter(pixel == 3)
EVI_s4 <- EVI_S %>%
filter(pixel == 4)
EVI_s5 <- EVI_S %>%
filter(pixel == 5)
NDVI_s1 <- NDVI_S %>%
filter(pixel == 1)
NDVI_s2 <- NDVI_S %>%
filter(pixel == 2)
NDVI_s3 <- NDVI_S %>%
filter(pixel == 3)
NDVI_s4 <- NDVI_S %>%
filter(pixel == 4)
NDVI_s5 <- NDVI_S %>%
filter(pixel == 5)
site_pixel1_EVI_S<- map(sites, sat_sum_fun, all_sp, EVI_s1)
site_pixel2_EVI_S<- map(sites, sat_sum_fun, all_sp, EVI_s2)
site_pixel3_EVI_S<- map(sites, sat_sum_fun, all_sp, EVI_s3)
site_pixel4_EVI_S<- map(sites, sat_sum_fun, all_sp, EVI_s4)
site_pixel5_EVI_S<- map(sites, sat_sum_fun, all_sp, EVI_s5)
site_pixel1_NDVI_S<- map(sites, sat_sum_fun, all_sp, NDVI_s1)
site_pixel2_NDVI_S<- map(sites, sat_sum_fun, all_sp, NDVI_s2)
site_pixel3_NDVI_S<- map(sites, sat_sum_fun, all_sp, NDVI_s3)
site_pixel4_NDVI_S<- map(sites, sat_sum_fun, all_sp, NDVI_s4)
site_pixel5_NDVI_S<- map(sites, sat_sum_fun, all_sp, NDVI_s5)
EVI_all <- bind_rows(site_summary_EVI)
EVI_all %>%
ggplot(aes(log(sapflow),evi, colour = name)) + geom_point()
EVI_all_S <- bind_rows(site_summary_EVI_S[!sapply(site_summary_EVI_S, function(x) all(is.na(x)))])
EVI_all_S %>%
filter(evi > 0) %>%
ggplot(aes(sapflow,evi, colour = name)) + geom_point()
EVI_S_pixel_all <-
rbind(bind_rows(site_pixel1_EVI_S[!sapply(site_pixel1_EVI_S,
function(x) all(is.na(x)))]) %>%
mutate(pixel = 1),
bind_rows(site_pixel2_EVI_S[!sapply(site_pixel2_EVI_S,
function(x) all(is.na(x)))])%>%
mutate(pixel = 2),
bind_rows(site_pixel3_EVI_S[!sapply(site_pixel3_EVI_S,
function(x) all(is.na(x)))])%>%
mutate(pixel = 3),
bind_rows(site_pixel4_EVI_S[!sapply(site_pixel4_EVI_S,
function(x) all(is.na(x)))])%>%
mutate(pixel = 4),
bind_rows(site_pixel5_EVI_S[!sapply(site_pixel5_EVI_S,
function(x) all(is.na(x)))])%>%
mutate(pixel = 5))
EVI_S_pixel_all %>%
filter(evi > 0) %>%
ggplot(aes(log10(sapflow),evi, shape = name, colour = as.factor(pixel))) +
geom_point()
EVI_all_sNA <- na.omit(EVI_all)
ccf(EVI_all_sNA$sapflow,EVI_all_sNA$evi)
require(mgcv)
gam_EVI <- function(site, evi_data) {
site_data <- evi_data %>% filter(name == site) %>%
mutate(month=as.numeric(month(rep_dates)))
mod <- gam(evi ~ s(month,k=3), data = site_data)
#summary(mod)
plot(mod)
return(summary(mod))
}
gam_residuals <- function(site, evi_data) {
site_data <- evi_data %>% filter(name == site) %>%
mutate(month=as.numeric(month(rep_dates)))
mod <- gam(evi ~ s(month,k=3), data = site_data)
print(summary(mod))
#plot(mod)
return(residuals(mod))
}
# #start with the first Y1, just to see
# EVI_Y <- EVI_all %>%
#   filter(name == "Y10") %>%
#   mutate(month=as.numeric(month(rep_dates)))
test <- map(sites,gam_residuals,EVI_all)
sites
sites_red <- sites[!(sites %in% c("B2","B3","M2","M3","M4","M5")]
sites_red <- sites %>% select(-c("B2","B3","M2","M3","M4","M5"))
sites_red <- sites[sites != c("B2","B3","M2","M3","M4","M5")]
sites_red <- sites[(sites != "B2" | sites != "B3"| sites != "M2"| sites != "M3"| sites != "M4"| sites != "M5")]
sites_red
?'%in%'
sites_red <- sites[!sites %in% c("B2","B3","M2","M3","M4","M5")]
test <- map(sites_red,gam_residuals,EVI_all)
sites_red
# Manning's equation
# Problem set Gordon et al. 2004
# Mannings equation
Q_man <- function(A,R,S,n) 1/n*A*R^(2/3)*S^0.5
S = 0.005
# Section 1
A = 0.2*3
P = 3
R = A/P
n = 0.06
Q1 <- Q_man(A,R,S,n)
Q1  #m3/s
# Section 2
A = 0.5*(3.25+3)/2
P = 2*0.8 + 2
R = A/P
n = 0.035
Q2 <- Q_man(A,R,S,n)
Q2  #m3/s
TotalQ = Q1 + Q2
TotalQ
Q_man <- function(A,R,S,n) 1/n*A*R^(2/3)*S^0.5
# slope is given
S = 0.005
# Section 1
A = 0.2*3
P = 3+2*0.2
R = A/P
# Manning's n is given
n = 0.06
# put in equation
Q1 <- Q_man(A,R,S,n)
Q1  #m3/s
A = 0.5*(3.25+3)/2
P = 2*0.8 + 2
R = A/P
# Manning's n is given
n = 0.035
# put in equation
Q2 <- Q_man(A,R,S,n)
Q2  #m3/s
TotalQ = Q1 + Q2
TotalQ
install.packages("trend")
require(trend)
data("PagesData")
updateR()
installr::updateR()
install.packages(installr)
install.packages("installr")
installr::updateR()
Cw <- seq(0,1,length=100)
F_Sf <- function(Cw) {
exp(0.8 + 0.04*Cw + 0.0005*Cw^2 + 0.000005*Cw^3)
}
plot(Cw,F_sf(Cw))
f_sf <- function(Cw) {
exp(0.8 + 0.04*Cw + 0.0005*Cw^2 + 0.000005*Cw^3)
}
plot(Cw,f_sf(Cw))
Cs <- seq(0,100,length = 100)
Cw <- seq(0,100,length = 100)
h <- seq(0,10, length = 100) # h is in meters
f_sf <- function(Cs) {
exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
plot(Cs,f_sf(Cs))
points(Cw,f_cp(Cw,h))
Cw <- seq(0,80,length = 100)
plot(Cs,f_sf(Cs))
points(Cw,f_cp(Cw,h))
Cw <- seq(0,100,length = 100)
Cs <- seq(0,80,length = 100)
Cw <- seq(0,100,length = 100)
h <- seq(0,10, length = 100) # h is in meters
f_sf <- function(Cs) {
exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
plot(Cs,f_sf(Cs))
points(Cw,f_cp(Cw,h))
par(mfrow=c(2,1))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
plot(Cw,f_cp(Cw,10))
plot(Cw,f_cp(Cw,5))
plot(Cw,f_cp(Cw,1))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf*f_cp
Cs <- seq(0,100,length = 100)
f_sf <- function(Cs) {
exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
SLR <- f_sf*f_cp
f_cp
SLR <- f_sf(Cs)*f_cp(Cw,1)
SLR
SLR/8431
plot(Cw,SLR/8431)
exp(-(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3))
f_sf <- function(Cs) {
exp(-(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3))
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,1)
plot(Cw,SLR/8431)
f_sf <- function(Cs) {
exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,1)
plot(Cw,SLR/8431)
Cs <- seq(0,50,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,1)
plot(Cw,SLR/8431)
Cs <- seq(0,80,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,1)
plot(Cw,SLR/8431)
Cs <- seq(0,90,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,1)
plot(Cw,SLR/8431)
Cs <- seq(0,85,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,1)
plot(Cw,SLR/8431)
SLR <- f_sf(Cs)*f_cp(Cw,10)
plot(Cw,SLR/8431)
SLR <- f_sf(Cs)*f_cp(Cw,0.1)
plot(Cw,SLR/8431)
Cs <- seq(0,100,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,0.1)
plot(Cw,SLR/8431)
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
Cs <- seq(0,80,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
Cs <- seq(0,90,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
Cs <- seq(0,85,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
exp(-(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3))
Cs <- seq(0,1,length = 100)
Cw <- seq(0,1,length = 100)
h <- seq(0,10, length = 100) # h is in meters
f_sf <- function(Cs) {
exp(-(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3))
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
1-exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
f_sf <- function(Cs) {
1-exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
Cs <- seq(0,100,length = 100)
Cw <- seq(0,100,length = 100)
f_sf <- function(Cs) {
1-exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
Cs <- seq(0,85,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
Cs <- seq(0,85,length = 100)
Cw <- seq(0,100,length = 100)
h <- seq(0,10, length = 100) # h is in meters
f_sf <- function(Cs) {
exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
f_sf <- function(Cs) {
exp(0.8 + 0.04*Cs/100 + 0.0005*(Cs/100)^2 + 0.000005*(Cs/100)^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
SLR <- f_sf(Cs)*f_cp(Cw,10)
plot(Cw,SLR/8431)
plot(Cs,f_sf(Cs))
Cs <- seq(0,100,length = 100)
plot(Cs,f_sf(Cs))
f_sf <- function(Cs) {
exp(0.8 + 0.04*Cs/100 + 0.0005*(Cs/100)^2 + 0.000005*(Cs/100)^3)
}
plot(Cs,f_sf(Cs))
exp(-(0.8 + 0.04*Cs + 0.0005*(Cs)^2 + 0.000005*(Cs)^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,10)
plot(Cw,SLR/8431)
f_sf <- function(Cs) {
exp(-(0.8 + 0.04*Cs + 0.0005*(Cs)^2 + 0.000005*(Cs)^3)
}
exp(-(0.8 + 0.04*Cs + 0.0005*(Cs)^2 + 0.000005*(Cs)^3))
f_sf <- function(Cs) {
exp(-(0.8 + 0.04*Cs + 0.0005*(Cs)^2 + 0.000005*(Cs)^3))
}
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
plot(Cw,SLR)
SLR <- f_sf(Cs)*f_cp(Cw,0.1)
plot(Cw,SLR)
SLR <- f_sf(Cs)*f_cp(Cw,0.4)
plot(Cw,SLR)
SLR <- f_sf(Cs)*f_cp(Cw,5)
plot(Cw,SLR)
SLR <- f_sf(Cs)*f_cp(Cw,1)
plot(Cw,SLR)
1 - (1-0.05)^20
1 - (1-0.0005)^20
?optimise
?optim
devtools::install_github("JosephGuillaume/hydromad")
setwd("D:/Dropbox (Sydney Uni)/Research/Forest_and_water/paper/Forest_and_Water")
require(tidyverse)
require(lubridate)
require(mgcv)
suppressWarnings(require(knitr))
suppressWarnings(require(bookdown))
suppressWarnings(require(pander))
Zhang_small <- read_csv("../../data/TablesZhangetal2017_small.csv")
Zhang_large <- read_csv("../../data/TablesZhangetal2017_large.csv")
