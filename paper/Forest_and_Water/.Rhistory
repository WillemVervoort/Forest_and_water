filter(pixel == 1)
EVI_s2 <- EVI_S %>%
filter(pixel == 2)
EVI_s3 <- EVI_S %>%
filter(pixel == 3)
EVI_s4 <- EVI_S %>%
filter(pixel == 4)
EVI_s5 <- EVI_S %>%
filter(pixel == 5)
NDVI_s1 <- NDVI_S %>%
filter(pixel == 1)
NDVI_s2 <- NDVI_S %>%
filter(pixel == 2)
NDVI_s3 <- NDVI_S %>%
filter(pixel == 3)
NDVI_s4 <- NDVI_S %>%
filter(pixel == 4)
NDVI_s5 <- NDVI_S %>%
filter(pixel == 5)
site_pixel1_EVI_S<- map(sites, sat_sum_fun, all_sp, EVI_s1)
site_pixel2_EVI_S<- map(sites, sat_sum_fun, all_sp, EVI_s2)
site_pixel3_EVI_S<- map(sites, sat_sum_fun, all_sp, EVI_s3)
site_pixel4_EVI_S<- map(sites, sat_sum_fun, all_sp, EVI_s4)
site_pixel5_EVI_S<- map(sites, sat_sum_fun, all_sp, EVI_s5)
site_pixel1_NDVI_S<- map(sites, sat_sum_fun, all_sp, NDVI_s1)
site_pixel2_NDVI_S<- map(sites, sat_sum_fun, all_sp, NDVI_s2)
site_pixel3_NDVI_S<- map(sites, sat_sum_fun, all_sp, NDVI_s3)
site_pixel4_NDVI_S<- map(sites, sat_sum_fun, all_sp, NDVI_s4)
site_pixel5_NDVI_S<- map(sites, sat_sum_fun, all_sp, NDVI_s5)
EVI_all <- bind_rows(site_summary_EVI)
EVI_all %>%
ggplot(aes(log(sapflow),evi, colour = name)) + geom_point()
EVI_all_S <- bind_rows(site_summary_EVI_S[!sapply(site_summary_EVI_S, function(x) all(is.na(x)))])
EVI_all_S %>%
filter(evi > 0) %>%
ggplot(aes(sapflow,evi, colour = name)) + geom_point()
EVI_S_pixel_all <-
rbind(bind_rows(site_pixel1_EVI_S[!sapply(site_pixel1_EVI_S,
function(x) all(is.na(x)))]) %>%
mutate(pixel = 1),
bind_rows(site_pixel2_EVI_S[!sapply(site_pixel2_EVI_S,
function(x) all(is.na(x)))])%>%
mutate(pixel = 2),
bind_rows(site_pixel3_EVI_S[!sapply(site_pixel3_EVI_S,
function(x) all(is.na(x)))])%>%
mutate(pixel = 3),
bind_rows(site_pixel4_EVI_S[!sapply(site_pixel4_EVI_S,
function(x) all(is.na(x)))])%>%
mutate(pixel = 4),
bind_rows(site_pixel5_EVI_S[!sapply(site_pixel5_EVI_S,
function(x) all(is.na(x)))])%>%
mutate(pixel = 5))
EVI_S_pixel_all %>%
filter(evi > 0) %>%
ggplot(aes(log10(sapflow),evi, shape = name, colour = as.factor(pixel))) +
geom_point()
EVI_all_sNA <- na.omit(EVI_all)
ccf(EVI_all_sNA$sapflow,EVI_all_sNA$evi)
require(mgcv)
gam_EVI <- function(site, evi_data) {
site_data <- evi_data %>% filter(name == site) %>%
mutate(month=as.numeric(month(rep_dates)))
mod <- gam(evi ~ s(month,k=3), data = site_data)
#summary(mod)
plot(mod)
return(summary(mod))
}
gam_residuals <- function(site, evi_data) {
site_data <- evi_data %>% filter(name == site) %>%
mutate(month=as.numeric(month(rep_dates)))
mod <- gam(evi ~ s(month,k=3), data = site_data)
print(summary(mod))
#plot(mod)
return(residuals(mod))
}
# #start with the first Y1, just to see
# EVI_Y <- EVI_all %>%
#   filter(name == "Y10") %>%
#   mutate(month=as.numeric(month(rep_dates)))
test <- map(sites,gam_residuals,EVI_all)
sites
sites_red <- sites[!(sites %in% c("B2","B3","M2","M3","M4","M5")]
sites_red <- sites %>% select(-c("B2","B3","M2","M3","M4","M5"))
sites_red <- sites[sites != c("B2","B3","M2","M3","M4","M5")]
sites_red <- sites[(sites != "B2" | sites != "B3"| sites != "M2"| sites != "M3"| sites != "M4"| sites != "M5")]
sites_red
?'%in%'
sites_red <- sites[!sites %in% c("B2","B3","M2","M3","M4","M5")]
test <- map(sites_red,gam_residuals,EVI_all)
sites_red
# Manning's equation
# Problem set Gordon et al. 2004
# Mannings equation
Q_man <- function(A,R,S,n) 1/n*A*R^(2/3)*S^0.5
S = 0.005
# Section 1
A = 0.2*3
P = 3
R = A/P
n = 0.06
Q1 <- Q_man(A,R,S,n)
Q1  #m3/s
# Section 2
A = 0.5*(3.25+3)/2
P = 2*0.8 + 2
R = A/P
n = 0.035
Q2 <- Q_man(A,R,S,n)
Q2  #m3/s
TotalQ = Q1 + Q2
TotalQ
Q_man <- function(A,R,S,n) 1/n*A*R^(2/3)*S^0.5
# slope is given
S = 0.005
# Section 1
A = 0.2*3
P = 3+2*0.2
R = A/P
# Manning's n is given
n = 0.06
# put in equation
Q1 <- Q_man(A,R,S,n)
Q1  #m3/s
A = 0.5*(3.25+3)/2
P = 2*0.8 + 2
R = A/P
# Manning's n is given
n = 0.035
# put in equation
Q2 <- Q_man(A,R,S,n)
Q2  #m3/s
TotalQ = Q1 + Q2
TotalQ
install.packages("trend")
require(trend)
data("PagesData")
updateR()
installr::updateR()
install.packages(installr)
install.packages("installr")
installr::updateR()
Cw <- seq(0,1,length=100)
F_Sf <- function(Cw) {
exp(0.8 + 0.04*Cw + 0.0005*Cw^2 + 0.000005*Cw^3)
}
plot(Cw,F_sf(Cw))
f_sf <- function(Cw) {
exp(0.8 + 0.04*Cw + 0.0005*Cw^2 + 0.000005*Cw^3)
}
plot(Cw,f_sf(Cw))
Cs <- seq(0,100,length = 100)
Cw <- seq(0,100,length = 100)
h <- seq(0,10, length = 100) # h is in meters
f_sf <- function(Cs) {
exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
plot(Cs,f_sf(Cs))
points(Cw,f_cp(Cw,h))
Cw <- seq(0,80,length = 100)
plot(Cs,f_sf(Cs))
points(Cw,f_cp(Cw,h))
Cw <- seq(0,100,length = 100)
Cs <- seq(0,80,length = 100)
Cw <- seq(0,100,length = 100)
h <- seq(0,10, length = 100) # h is in meters
f_sf <- function(Cs) {
exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
plot(Cs,f_sf(Cs))
points(Cw,f_cp(Cw,h))
par(mfrow=c(2,1))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
plot(Cw,f_cp(Cw,10))
plot(Cw,f_cp(Cw,5))
plot(Cw,f_cp(Cw,1))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf*f_cp
Cs <- seq(0,100,length = 100)
f_sf <- function(Cs) {
exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
SLR <- f_sf*f_cp
f_cp
SLR <- f_sf(Cs)*f_cp(Cw,1)
SLR
SLR/8431
plot(Cw,SLR/8431)
exp(-(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3))
f_sf <- function(Cs) {
exp(-(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3))
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,1)
plot(Cw,SLR/8431)
f_sf <- function(Cs) {
exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,1)
plot(Cw,SLR/8431)
Cs <- seq(0,50,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,1)
plot(Cw,SLR/8431)
Cs <- seq(0,80,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,1)
plot(Cw,SLR/8431)
Cs <- seq(0,90,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,1)
plot(Cw,SLR/8431)
Cs <- seq(0,85,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,1)
plot(Cw,SLR/8431)
SLR <- f_sf(Cs)*f_cp(Cw,10)
plot(Cw,SLR/8431)
SLR <- f_sf(Cs)*f_cp(Cw,0.1)
plot(Cw,SLR/8431)
Cs <- seq(0,100,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,0.1)
plot(Cw,SLR/8431)
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
Cs <- seq(0,80,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
Cs <- seq(0,90,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
Cs <- seq(0,85,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
exp(-(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3))
Cs <- seq(0,1,length = 100)
Cw <- seq(0,1,length = 100)
h <- seq(0,10, length = 100) # h is in meters
f_sf <- function(Cs) {
exp(-(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3))
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
1-exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
f_sf <- function(Cs) {
1-exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
Cs <- seq(0,100,length = 100)
Cw <- seq(0,100,length = 100)
f_sf <- function(Cs) {
1-exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
Cs <- seq(0,85,length = 100)
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
Cs <- seq(0,85,length = 100)
Cw <- seq(0,100,length = 100)
h <- seq(0,10, length = 100) # h is in meters
f_sf <- function(Cs) {
exp(0.8 + 0.04*Cs + 0.0005*Cs^2 + 0.000005*Cs^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
f_sf <- function(Cs) {
exp(0.8 + 0.04*Cs/100 + 0.0005*(Cs/100)^2 + 0.000005*(Cs/100)^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,0.5)
plot(Cw,SLR/8431)
SLR <- f_sf(Cs)*f_cp(Cw,10)
plot(Cw,SLR/8431)
plot(Cs,f_sf(Cs))
Cs <- seq(0,100,length = 100)
plot(Cs,f_sf(Cs))
f_sf <- function(Cs) {
exp(0.8 + 0.04*Cs/100 + 0.0005*(Cs/100)^2 + 0.000005*(Cs/100)^3)
}
plot(Cs,f_sf(Cs))
exp(-(0.8 + 0.04*Cs + 0.0005*(Cs)^2 + 0.000005*(Cs)^3)
}
f_cp <- function(Cw, h) {
1 - Cw/100*exp(-0.328*h)
}
par(mfrow=c(1,2))
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
SLR <- f_sf(Cs)*f_cp(Cw,10)
plot(Cw,SLR/8431)
f_sf <- function(Cs) {
exp(-(0.8 + 0.04*Cs + 0.0005*(Cs)^2 + 0.000005*(Cs)^3)
}
exp(-(0.8 + 0.04*Cs + 0.0005*(Cs)^2 + 0.000005*(Cs)^3))
f_sf <- function(Cs) {
exp(-(0.8 + 0.04*Cs + 0.0005*(Cs)^2 + 0.000005*(Cs)^3))
}
plot(Cs,f_sf(Cs))
plot(Cw,f_cp(Cw,h))
plot(Cw,SLR)
SLR <- f_sf(Cs)*f_cp(Cw,0.1)
plot(Cw,SLR)
SLR <- f_sf(Cs)*f_cp(Cw,0.4)
plot(Cw,SLR)
SLR <- f_sf(Cs)*f_cp(Cw,5)
plot(Cw,SLR)
SLR <- f_sf(Cs)*f_cp(Cw,1)
plot(Cw,SLR)
1 - (1-0.05)^20
1 - (1-0.0005)^20
?optimise
?optim
devtools::install_github("JosephGuillaume/hydromad")
setwd("D:/Dropbox (Sydney Uni)/Research/Forest_and_water/paper/Forest_and_Water")
require(tidyverse)
require(lubridate)
require(mgcv)
suppressWarnings(require(knitr))
suppressWarnings(require(bookdown))
suppressWarnings(require(pander))
Zhang_small <- read_csv("../../data/TablesZhangetal2017_small.csv")
Zhang_large <- read_csv("../../data/TablesZhangetal2017_large.csv") %>%
mutate(Complete = 1,
`Possible duplicate` = 0)
new_data <- read_csv("../../data/TableNewData.csv")
PET_large <- read_csv("../../data/largeET.csv")
PET_small <- read_csv("../../data/smallET.csv")
# drop columns and make sure the titles are the same
PET_large <- PET_large %>%
rename(Latitude = Latitiude,
E0 = rvalue_1,
`Watershed #` = Watershed)
PET_small <- PET_small %>%
select(site_name, lat, long, rvalue_1) %>%
rename(Latitude = lat,
Longitude = long,
`Watershed #` = site_name,
E0 = rvalue_1)
#
PET_all <- bind_rows(PET_large, PET_small)
# There are 7 missing E0 values
# > PET_all$`Watershed #`[is.na(PET_all$E0)==T]
# [1]  38 278 269 243 236 299 250
names(Zhang_small)[3:4] <- c("Area_km2", "Pa_mm")
names(Zhang_large)[3:4] <- c("Area_km2", "Pa_mm")
names(new_data)[3:4] <- c("Area_km2", "Pa_mm")
names(Zhang_small)[5:6] <- c("Forest_type", "Hydrological_regime")
names(Zhang_large)[5:6] <- c("Forest_type", "Hydrological_regime")
names(new_data)[5:6] <- c("Forest_type", "Hydrological_regime")
names(Zhang_small)[9:10] <- c("Precip_data_type", "Assessment_technique")
names(Zhang_large)[9:10] <- c("Precip_data_type", "Assessment_technique")
names(new_data)[9:10] <- c("Precip_data_type", "Assessment_technique")
Zhang_small$From <- as.numeric(Zhang_small$From)
Zhang_small$To <- as.numeric(Zhang_small$To)
Zhang_all <- bind_rows(Zhang_large,Zhang_small) %>%
mutate(dataset = "original Zhang et al data")
new_data <- new_data %>%
mutate(dataset = "new data")
All_data <- bind_rows(Zhang_all, new_data)
All_data <- All_data %>%
mutate(`Possible duplicate` =
ifelse(is.na(`Possible duplicate`)==T,0,`Possible duplicate`),
`Possible duplicate` = as.numeric(`Possible duplicate`)) %>%
filter(`Possible duplicate` != 1)
All_data <- left_join(All_data ,PET_all %>% select(-c(Longitude, Latitude)), by = "Watershed #")
All_data <- All_data %>%
mutate(E0 = ifelse(is.na(E0.x)==T, E0.y, E0.x)) %>%
select(-c(E0.x,E0.y)) #%>%
#rename(Latitude = Latitude.x,
#         Longitude = Longitude.x)
# calculate dryness index
All_data <- All_data %>%
mutate(Dryness = E0/Pa_mm)
All_data <- All_data %>%
filter(`Watershed #` != 1)
All_data <- All_data %>%
mutate(DeltaQf_perc = ifelse(`Watershed #` == 76,157,DeltaQf_perc))
png("DataExploration.png", width = 2500, height = 1800, res = 300)
All_data %>%
pivot_longer(c(DeltaF_perc, DeltaQf_perc, Area_km2, Pa_mm, E0),
names_to = "variable", values_to = "value") %>%
ggplot(aes(value)) + geom_histogram(fill = "steelblue", bins=50) + theme_bw() +
facet_wrap(~variable, scales = "free", labeller = labeller(variable =
c("Area_km2" = "Area (km2)",
"DeltaF_perc" = "Delta Forest (%)",
"DeltaQf_perc" = "Delta Flow (%)",
"E0" = "Annual Potential E (mm)",
"Pa_mm" = "Annual Rainfall (mm)"))) +
theme(axis.title = element_text(size = rel(2)),
axis.text = element_text(size = rel(1.5)),
axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
All_data2 <- All_data %>%
mutate(Forest_Sign = ifelse(DeltaF_perc < 0,
"decrease", "increase"),
DeltaF_perc_pos = ifelse(DeltaF_perc < 0,
-1*DeltaF_perc,
DeltaF_perc))
# plot to show the difference
png("Increase_decrease.png", width = 2500, height = 1800, res = 300)
All_data2 %>%
ggplot(aes(DeltaF_perc_pos,DeltaQf_perc, colour = Forest_Sign)) +
geom_point() +
facet_wrap(~Forest_Sign, ncol=1, scales = "free") +
theme_bw() + scale_colour_manual(name = "direction of forest change", values = c("increase" = "blue", "decrease" = "red")) +
xlab("Change in forest cover %") + ylab("Change in flow %")
dev.off()
linear_model_simple <- gam(DeltaQf_perc ~ DeltaF_perc_pos +
Forest_Sign,
data = All_data2 %>% filter(dataset == "original Zhang et al data"))
#summary(linear_model_simple)
#gam.check(linear_model_simple)
linear_model_simple_b <- gam(DeltaQf_perc ~ DeltaF_perc_pos +
Forest_Sign,
data = All_data2)
#summary(linear_model_simple)
#gam.check(linear_model_simple)
pander(round(summary(linear_model_simple)$p.table,2), caption="Summary results of the first regression model predicting change in streamflow from change in forest cover and accounting for the direction of the change")
pander(round(summary(linear_model_simple_b)$p.table,2), caption="Summary results of the first regression model predicting change in streamflow from change in forest cover and accounting for the direction of the change including the new data sets")
model7_noLatb <- gam(DeltaQf_perc ~ DeltaF_perc_pos + Forest_Sign +
s(Dryness, bs="ts" ) + #s(Latitude, bs="ts") +
s(log10(Area_km2), bs="ts") + s(length,bs="ts") +
Precip_data_type +  Assessment_technique + Forest_type +
Hydrological_regime, data = All_data2 %>% filter(length< 60))
summary(model7_noLatb)
plot(model7_noLatb)
model6_all <- gam(DeltaQf_perc ~ DeltaF_perc_pos + Forest_Sign +
s(log10(Area_km2), bs="ts") + s(Dryness, bs="ts" ) +
s(length, bs="ts") +
Precip_data_type +  Assessment_technique + Forest_type +
Hydrological_regime
, data = All_data2)
#summary(model6_all)
#gam.check(model6_all)
#plot(model6_all)
pander(round(summary(model6_all)$p.table,2))
pander(round(summary(model6_all)$s.table,2))
plot(model6_all, select = 3)
All_data2 <- All_data2 %>%
mutate(length = To - From)
model5_all <- gam(DeltaQf_perc ~ DeltaF_perc_pos + Forest_Sign +
s(log10(Area_km2), bs="ts") + s(Dryness, bs="ts") +
s(length, bs="ts") ,
data = All_data2)
summary(model5_all)
#gam.check(model5_all)
#plot(model5_all)
pander(round(summary(model5_all)$p.table,2))
pander(round(summary(model5_all)$s.table,2))
plot(model5_all)
model7_noLatb <- gam(DeltaQf_perc ~ DeltaF_perc_pos + Forest_Sign +
s(Dryness, bs="ts" ) + #s(Latitude, bs="ts") +
s(log10(Area_km2), bs="ts") + s(length,bs="ts") +
Precip_data_type +  Assessment_technique + Forest_type +
Hydrological_regime, data = All_data2 %>% filter(length< 60))
summary(model7_noLatb)
plot(model7_noLatb)
plot(model7_noLatb)
ggplot(aes(Assessment_technique)) +
geom_boxplot(fill = "blue") + theme_bw()
All_data2 %>%
group_by(Assessment_technique) %>%
summarise(n = n())
