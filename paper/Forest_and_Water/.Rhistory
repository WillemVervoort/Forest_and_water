# filter remote sensing data to site and time period
min_RS_date <- RS_data$date[1]
max_sf_date <- site_data$date[which.max(site_data$date)]
if (max_sf_date > min_RS_date) {
site_RS <- RS_data %>% filter(name == site) %>%
filter(date >=
site_data$date[which.min(site_data$date)] &
date <= site_data$date[which.max(site_data$date)])
new_dates <- repeat_dates(site_data,site_RS)
# now join site_data, site_RS and new_dates
sat_temp <- left_join(site_data, site_RS)
site_all <- left_join(sat_temp, new_dates,
by=c("date" = "date"))
# finally calculate the average by rep_dates
if (any(grepl("fpar",names(site_all)))==T) {
site_sum <- site_all %>%
group_by(rep_dates) %>%
summarise(name = unique(name),
sapflow = mean(sapflow),
rain = sum(Rain),
evap = mean(Evap),
fpar = mean(fpar, na.rm =T))
} else {
site_sum <- site_all %>%
group_by(rep_dates) %>%
summarise(name = unique(name),
sapflow = mean(sapflow),
rain = sum(Rain),
evap = mean(Evap),
aet = mean(aet, na.rm =T))
}
return(site_sum)
} else return(NA)
}
# 1. split by site
sites <- unique(all_sp$name)
site_summary_FPAR<- map(sites, sat_sum_fun, all_sp, FPAR)
site_summary_AET<- map(sites, sat_sum_fun, all_sp, AET)
AET_all %>%
ggplot(aes(sapflow,aet,)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
AET_all %>%
ggplot(aes(sapflow,evap,)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
FPAR_all <- bind_rows(site_summary_FPAR)
AET_all <- bind_rows(site_summary_AET)
FPAR_all %>%
ggplot(aes(sapflow,fpar, colour = name)) + geom_point()
AET_all %>%
ggplot(aes(sapflow,aet, colour = name)) + geom_point()
# acf_data <- EVI_all %>%
#   group_by(name) %>%
#   nest() %>%
#   mutate(acf = map(data, function(x) {
#     ccf(x$sapflow,x$rain, na.action=na.pass)}))
AET_all %>%
mutate(scaled_sf = 10*sapflow) %>%
pivot_longer(c(scaled_sf,aet), names_to = "variable", values_to = "mm") %>%
ggplot(aes(rep_dates,mm, colour = variable)) + geom_line() + facet_wrap(~name, scale="free")
AET_all %>%
ggplot(aes(sapflow,aet,)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
AET_all %>%
ggplot(aes(sapflow,evap,)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
all <- left_join(FPAR_all,AET_all)
all %>%
mutated(scaled_aet = aet*fpar) %>%
ggplot(aes(sapflow,scaled_aet, colour = name)) + geom_point()
all %>%
mutate(scaled_aet = aet*fpar) %>%
ggplot(aes(sapflow,scaled_aet, colour = name)) + geom_point()
all %>%
ggplot(aes(sapflow,scaled_aet,)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
all %>%
mutate(scaled_aet = aet*fpar) %>%
ggplot(aes(sapflow,scaled_aet,)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
all %>%
mutate(scaled_sft = sapflow/fpar) %>%
ggplot(aes(scaled_sf,aet,)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
all %>%
mutate(scaled_sf = sapflow/fpar) %>%
ggplot(aes(scaled_sf,aet,)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
windows()
all %>%
mutate(scaled_sf = sapflow/fpar) %>%
ggplot(aes(scaled_sf,aet,)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
png()
all %>%
mutate(scaled_sf = sapflow/fpar) %>%
ggplot(aes(scaled_sf,aet,)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
?png
png(filename="sapflow_aet.png", width = 760, height = 760)
all %>%
mutate(scaled_sf = sapflow/fpar) %>%
ggplot(aes(sapflow,aet,)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
png(filename="sapflow_ETpot.png", width = 760, height = 760)
AET_all %>%
ggplot(aes(sapflow,evap)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
sat_sum_fun <- function(site, sapflow_data, RS_data, pixel= NULL) {
#browser()
site_data <- sapflow_data %>% filter(name == site)
# filter remote sensing data to site and time period
min_RS_date <- RS_data$date[1]
max_sf_date <- site_data$date[which.max(site_data$date)]
if (max_sf_date > min_RS_date) {
site_RS <- RS_data %>% filter(name == site) %>%
filter(date >=
site_data$date[which.min(site_data$date)] &
date <= site_data$date[which.max(site_data$date)])
new_dates <- repeat_dates(site_data,site_RS)
# now join site_data, site_RS and new_dates
sat_temp <- left_join(site_data, site_RS)
site_all <- left_join(sat_temp, new_dates,
by=c("date" = "date"))
# finally calculate the average by rep_dates
if (any(grepl("fpar",names(site_all)))==T) {
site_sum <- site_all %>%
group_by(rep_dates) %>%
summarise(name = unique(name),
sapflow = sum(sapflow),
rain = sum(Rain),
evap = mean(Evap),
fpar = mean(fpar, na.rm =T))
} else {
site_sum <- site_all %>%
group_by(rep_dates) %>%
summarise(name = unique(name),
sapflow = sum(sapflow),
rain = sum(Rain),
evap = mean(Evap),
aet = mean(aet, na.rm =T))
}
return(site_sum)
} else return(NA)
}
# 1. split by site
sites <- unique(all_sp$name)
site_summary_FPAR<- map(sites, sat_sum_fun, all_sp, FPAR)
site_summary_AET<- map(sites, sat_sum_fun, all_sp, AET)
FPAR_all <- bind_rows(site_summary_FPAR)
AET_all <- bind_rows(site_summary_AET)
FPAR_all %>%
ggplot(aes(sapflow,fpar, colour = name)) + geom_point()
AET_all %>%
ggplot(aes(sapflow,aet, colour = name)) + geom_point()
# acf_data <- EVI_all %>%
#   group_by(name) %>%
#   nest() %>%
#   mutate(acf = map(data, function(x) {
#     ccf(x$sapflow,x$rain, na.action=na.pass)}))
all <- left_join(FPAR_all,AET_all)
all %>%
mutate(scaled_aet = aet*fpar) %>%
ggplot(aes(sapflow,scaled_aet, colour = name)) + geom_point()
AET_all %>%
mutate(scaled_sf = 10*sapflow) %>%
pivot_longer(c(scaled_sf,aet), names_to = "variable", values_to = "mm") %>%
ggplot(aes(rep_dates,mm, colour = variable)) + geom_line() + facet_wrap(~name, scale="free")
AET_all %>%
mutate(scaled_sf = sapflow) %>%
pivot_longer(c(scaled_sf,aet), names_to = "variable", values_to = "mm") %>%
ggplot(aes(rep_dates,mm, colour = variable)) + geom_line() + facet_wrap(~name, scale="free")
png(filename="sapflow_aet.png", width = 760, height = 760)
all %>%
mutate(scaled_sf = sapflow/fpar) %>%
ggplot(aes(sapflow,aet,)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
png(filename="sapflow_ETpot.png", width = 760, height = 760)
AET_all %>%
ggplot(aes(sapflow,evap)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
all <- left_join(FPAR_all,AET_all)
all %>%
mutate(scaled_aet = aet*fpar) %>%
ggplot(aes(sapflow,scaled_aet, colour = name)) + geom_point()
png(filename="sapflow_aet.png", width = 760, height = 760)
all %>%
mutate(scaled_sf = sapflow/fpar) %>%
ggplot(aes(sapflow,aet,)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
png(filename="sapflow_ETpot.png", width = 760, height = 760)
AET_all %>%
ggplot(aes(sapflow,evap)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
all <- left_join(FPAR_all,AET_all)
all %>%
mutate(scaled_aet = aet*fpar) %>%
ggplot(aes(sapflow,scaled_aet, colour = name)) + geom_point()
png(filename="sapflow_aet.png", width = 760, height = 760)
all %>%
mutate(scaled_sf = sapflow/fpar) %>%
ggplot(aes(sapflow,aet)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
sat_sum_fun <- function(site, sapflow_data, RS_data, pixel= NULL) {
#browser()
site_data <- sapflow_data %>% filter(name == site)
# filter remote sensing data to site and time period
min_RS_date <- RS_data$date[1]
max_sf_date <- site_data$date[which.max(site_data$date)]
if (max_sf_date > min_RS_date) {
site_RS <- RS_data %>% filter(name == site) %>%
filter(date >=
site_data$date[which.min(site_data$date)] &
date <= site_data$date[which.max(site_data$date)])
new_dates <- repeat_dates(site_data,site_RS)
# now join site_data, site_RS and new_dates
sat_temp <- left_join(site_data, site_RS)
site_all <- left_join(sat_temp, new_dates,
by=c("date" = "date"))
# finally calculate the average by rep_dates
if (any(grepl("fpar",names(site_all)))==T) {
site_sum <- site_all %>%
group_by(rep_dates) %>%
summarise(name = unique(name),
sapflow = mean(sapflow),
rain = sum(Rain),
evap = mean(Evap),
fpar = mean(fpar, na.rm =T))
} else {
site_sum <- site_all %>%
group_by(rep_dates) %>%
summarise(name = unique(name),
sapflow = mean(sapflow),
rain = sum(Rain),
evap = mean(Evap),
aet = mean(aet, na.rm =T))
}
return(site_sum)
} else return(NA)
}
# 1. split by site
sites <- unique(all_sp$name)
site_summary_FPAR<- map(sites, sat_sum_fun, all_sp, FPAR)
site_summary_AET<- map(sites, sat_sum_fun, all_sp, AET)
FPAR_all <- bind_rows(site_summary_FPAR)
AET_all <- bind_rows(site_summary_AET)
FPAR_all %>%
ggplot(aes(sapflow,fpar, colour = name)) + geom_point()
AET_all %>%
ggplot(aes(sapflow,aet, colour = name)) + geom_point()
# acf_data <- EVI_all %>%
#   group_by(name) %>%
#   nest() %>%
#   mutate(acf = map(data, function(x) {
#     ccf(x$sapflow,x$rain, na.action=na.pass)}))
all <- left_join(FPAR_all,AET_all)
all %>%
mutate(scaled_aet = aet*fpar) %>%
ggplot(aes(sapflow,scaled_aet, colour = name)) + geom_point()
AET_all %>%
mutate(scaled_sf = sapflow) %>%
pivot_longer(c(scaled_sf,aet), names_to = "variable", values_to = "mm") %>%
ggplot(aes(rep_dates,mm, colour = variable)) + geom_line() + facet_wrap(~name, scale="free")
AET_all %>%
mutate(scaled_sf = 10*sapflow) %>%
pivot_longer(c(scaled_sf,aet), names_to = "variable", values_to = "mm") %>%
ggplot(aes(rep_dates,mm, colour = variable)) + geom_line() + facet_wrap(~name, scale="free")
png(filename="sapflow_aet.png", width = 760, height = 760)
all %>%
mutate(scaled_sf = sapflow/fpar) %>%
ggplot(aes(sapflow,aet)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
png(filename="sapflow_ETpot.png", width = 760, height = 760)
AET_all %>%
ggplot(aes(sapflow,evap)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
fc_data <- read_csv("FC_dataset_20200614.csv")
fc_data <- fc_data %>%
mutate(date = ymd(date)) %>%
select(c(name,date,rasValue)) %>%
rename(FC = rasValue)
fc_data %>%
ggplot(aes(date,FC, colour = name)) + geom_point()
AET <- left_join(AET,fc_data, by = c("name","Date" = "date"))
str(AET)
AET <- left_join(AET,fc_data, by = c("name","date"))
sat_sum_fun <- function(site, sapflow_data, RS_data, pixel= NULL) {
#browser()
site_data <- sapflow_data %>% filter(name == site)
# filter remote sensing data to site and time period
min_RS_date <- RS_data$date[1]
max_sf_date <- site_data$date[which.max(site_data$date)]
if (max_sf_date > min_RS_date) {
site_RS <- RS_data %>% filter(name == site) %>%
filter(date >=
site_data$date[which.min(site_data$date)] &
date <= site_data$date[which.max(site_data$date)])
new_dates <- repeat_dates(site_data,site_RS)
# now join site_data, site_RS and new_dates
sat_temp <- left_join(site_data, site_RS)
site_all <- left_join(sat_temp, new_dates,
by=c("date" = "date"))
# finally calculate the average by rep_dates
if (any(grepl("fpar",names(site_all)))==T) {
site_sum <- site_all %>%
group_by(rep_dates) %>%
summarise(name = unique(name),
sapflow = mean(sapflow),
rain = sum(Rain),
evap = mean(Evap),
fpar = mean(fpar, na.rm =T))
} else {
site_sum <- site_all %>%
group_by(rep_dates) %>%
summarise(name = unique(name),
sapflow = mean(sapflow),
rain = sum(Rain),
evap = mean(Evap),
aet = mean(aet, na.rm =T),
fc = mean(FC, na.rm =T))
}
return(site_sum)
} else return(NA)
}
# 1. split by site
sites <- unique(all_sp$name)
site_summary_FPAR<- map(sites, sat_sum_fun, all_sp, FPAR)
site_summary_AET<- map(sites, sat_sum_fun, all_sp, AET)
FPAR_all <- bind_rows(site_summary_FPAR)
AET_all <- bind_rows(site_summary_AET)
FPAR_all %>%
ggplot(aes(sapflow,fpar, colour = name)) + geom_point()
AET_all %>%
ggplot(aes(sapflow,aet, colour = name)) + geom_point()
# acf_data <- EVI_all %>%
#   group_by(name) %>%
#   nest() %>%
#   mutate(acf = map(data, function(x) {
#     ccf(x$sapflow,x$rain, na.action=na.pass)}))
AET_all %>%
ggplot(aes(sapflow*fc/100,aet, colour = name)) + geom_point()
AET_all %>%
ggplot(aes(sapflow,aet*fc/100, colour = name)) + geom_point()
all <- left_join(FPAR_all,AET_all)
all %>%
mutate(scaled_aet = aet*fc/100) %>%
ggplot(aes(sapflow,scaled_aet, colour = name)) + geom_point()
#png(filename="sapflow_aet.png", width = 760, height = 760)
all %>%
mutate(scaled_aet = aet*fc/100) %>%
ggplot(aes(sapflow,scaled_aet)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
#dev.off()
png(filename="sapflow_aet.png", width = 760, height = 760)
all %>%
mutate(scaled_aet = aet*fc/100) %>%
ggplot(aes(sapflow,scaled_aet)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
png(filename="sapflow_aet.png", width = 760, height = 760)
all %>%
#mutate(scaled_aet = aet*fc/100) %>%
ggplot(aes(sapflow,aet)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
png(filename="sapflow_scaled_aet.png", width = 760, height = 760)
all %>%
mutate(scaled_aet = aet*fc/100) %>%
ggplot(aes(sapflow,scaled_aet)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
png(filename="sapflow_scaled_aet&rain.png", width = 760, height = 760)
all %>%
mutate(scaled_aet = aet*fc/100) %>%
ggplot(aes(sapflow,scaled_aet, colour=rain)) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
png(filename="sapflow_scaled_aet&rain.png", width = 760, height = 760)
all %>%
mutate(scaled_aet = aet*fc/100) %>%
ggplot(aes(sapflow,scaled_aet, colour=log(rain))) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
png(filename="sapflow_scaled_aet&rain.png", width = 760, height = 760)
all %>%
mutate(scaled_aet = aet*fc/100) %>%
ggplot(aes(sapflow,scaled_aet, colour=log(rain+1))) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
png(filename="sapflow_scaled_aet&rain.png", width = 760, height = 760)
all %>%
mutate(scaled_aet = aet*fc/100) %>%
ggplot(aes(sapflow,scaled_aet - rain, colour=log(rain+1))) + geom_point() + geom_smooth(method="lm") +
facet_wrap(~name, scale="free")
dev.off()
png(filename="sapflow_scaled_aet&rain.png", width = 760, height = 760)
all %>%
mutate(scaled_aet = aet*fc/100) %>%
ggplot(aes(sapflow,scaled_aet - rain, colour=log(rain+1))) + geom_point() + geom_smooth(method="lm") + ylim(0,2) +
facet_wrap(~name, scale="free")
dev.off()
png(filename="sapflow_scaled_aet&rain.png", width = 760, height = 760)
png(filename="sapflow_scaled_aet&rain.png", width = 760, height = 760)
all %>%
mutate(scaled_aet = aet*fc/100) %>%
ggplot(aes(sapflow,scaled_aet, colour=log(rain+1))) + geom_point() + geom_smooth(method="lm") + #ylim(0,2) +
facet_wrap(~name, scale="free")
dev.off()
x <- seq(-32,32)
y <- x*5/9 -32
y
plot(x,y)
y <- x/5/9 -32
plot(x,y)
plot(x,y)
y <- x*5/9 -32
tf = tc*5/9 -32
tf = function(tc)
tc*5/9 -32
tf(-72)
tf = function(tc) {}
tf = function(tc) {
tc*5/9 -32}
tf(-72)
tf = function(tc) {
tc*9/5 -32}
tf(-40)
tc*5/9 + 32}
tf = function(tc) {
tc*5/9 + 32}
tf(-40)
tc*9/5 + 32}
tf = function(tc) {
tc*9/5 + 32}
tf(-40)
require(stats4)
require(stats4)
set.seed(1001)
N <- 100
x <- rnorm(N,mean = 3, sd = 2)
mean(x)
sd(x)
LL <- function(x, mu, sigma) {
# define probability distribution for a normal distribution
R = surpressWarnings(dnorm(x,mu,sigma))
#minus 1 * sum of logged values
-sum(log(R))
}
mle(LL, start=list(x=x, mu = 1, sigma =1)))
mle(LL, start=list(x=x, mu = 1, sigma =1))
mle(LL, start=list(mu = 1, sigma =1))
LL <- function(mu, sigma) {
# define probability distribution for a normal distribution
R = surpressWarnings(dnorm(x,mu,sigma))
#minus 1 * sum of logged values
-sum(log(R))
}
mle(LL, start=list(mu = 1, sigma =1))
LL <- function(mu, sigma) {
# define probability distribution for a normal distribution
R = suppressWarnings(dnorm(x,mu,sigma))
#minus 1 * sum of logged values
-sum(log(R))
}
mle(LL, start=list(mu = 1, sigma =1))
require(tidyverse)
require(lubridate)
require(mgcv)
suppressWarnings(require(knitr))
suppressWarnings(require(bookdown))
suppressWarnings(require(pander))
Zhang_small <- read_csv("../../data/TablesZhangetal2017_small.csv")
Zhang_large <- read_csv("../../data/TablesZhangetal2017_large.csv")
setwd("C:/Users/rver4657/Dropbox (Sydney Uni)/Research/Forest_and_water/paper/Forest_and_Water")
require(tidyverse)
require(lubridate)
require(mgcv)
suppressWarnings(require(knitr))
suppressWarnings(require(bookdown))
suppressWarnings(require(pander))
Zhang_small <- read_csv("../../data/TablesZhangetal2017_small.csv")
Zhang_large <- read_csv("../../data/TablesZhangetal2017_large.csv")
PET_large <- read_csv("../../data/largeET.csv")
PET_small <- read_csv("../../data/smallET.csv")
# drop columns and make sure the titles are the same
PET_large <- PET_large %>%
rename(Latitude = Latitiude,
E0 = rvalue_1,
`Watershed #` = Watershed)
PET_small <- PET_small %>%
select(site_name, lat, long, rvalue_1) %>%
rename(Latitude = lat,
Longitude = long,
`Watershed #` = site_name,
E0 = rvalue_1)
#
PET_all <- bind_rows(PET_large, PET_small)
# There are 7 missing E0 values
# > PET_all$`Watershed #`[is.na(PET_all$E0)==T]
# [1]  38 278 269 243 236 299 250
names(Zhang_large)
names(Zhang_small)
